<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.doidea</groupId>
    <artifactId>doidea</artifactId>
    <version>1.0.0</version>
    <name>doidea</name>
    <description>Just like you known.</description>
    <packaging>jar</packaging>

    <properties>
        <!-- 相当于配置 maven-compiler-plugin -->
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.javassist/javassist -->
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.30.2-GA</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
                <!-- 生成包含依赖第三方jar的jar包，可直接 java -jar 运行 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <archive>
                        <!-- 自动添加和配置 META-INF/MANIFEST.MF -->
                        <manifest>
                            <!-- 指定入口函数 -->
                            <mainClass>com.doidea.core.Launcher</mainClass>
                            <!-- 是否添加依赖的jar路径配置 -->
                            <!-- maven-assembly-plugin 不需要设置lib -->
                            <!--<addClasspath>false</addClasspath>-->
                            <!-- 依赖jar包位置前缀 -->
                            <!--<classpathPrefix>lib/</classpathPrefix>-->
                        </manifest>
                        <!-- MANIFEST.MF 补充参数 -->
                        <manifestEntries>
                            <Premain-Class>com.doidea.core.Launcher</Premain-Class>
                            <Agent-Class>com.doidea.core.Launcher</Agent-Class>
                            <Main-Class>com.doidea.core.Launcher</Main-Class>
                            <Can-Redefine-Classes>true</Can-Redefine-Classes>
                            <Can-Retransform-Classes>true</Can-Retransform-Classes>
                            <Can-Set-Native-Method-Prefix>true</Can-Set-Native-Method-Prefix>
                            <!-- Class-Path、Boot-Class-Path 设置无效
                            使用 JVM 启动参数添加：-Xbootclasspath/a:E:\DevRes\doidea\javassist-3.30.2-GA.jar -->
                            <!-- 跟 classpathPrefix 重复
                            <Class-Path>lib/javassist-3.30.2-GA.jar</Class-Path>
                            <Boot-Class-Path>lib/javassist-3.30.2-GA.jar</Boot-Class-Path>
                            -->
                        </manifestEntries>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <!-- 生成的jar包去掉 `jar-with-dependencies` 后缀 -->
                    <!--<appendAssemblyId>false</appendAssemblyId>-->
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
